class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        flag=false;
        //for(int i=0;i<graph.size();i++)
            traversal(graph,-1,0,0,0);
        
        return !flag;
    }
private:
    void traversal(vector<vector<int>>& graph, int pre, int cur,int start,int steps)
    {
        if(flag)return;
        if(cur==start&&steps!=0)
        {
            if(steps%2==1)
                flag=1;
            return;
        }
        for(int i=0;i<graph[cur].size();i++)
        {
            if(graph[cur][i]!=pre){
                steps+=1;
                traversal(graph,cur,graph[cur][i],start,steps);
            }
 
        }
    }
    bool flag;
};